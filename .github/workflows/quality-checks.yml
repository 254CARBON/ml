name: Quality Checks

on:
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.11"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black==23.11.0 flake8==6.1.0 isort==5.12.0

      - name: Check formatting with black
        run: black --check --diff .

      - name: Check imports with isort
        run: isort --check-only --diff .

      - name: Lint with flake8
        run: flake8 .

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run mypy
        run: |
          mypy libs/ service-*/

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run test suite
        env:
          PYTHONPATH: .
          PYTHONWARNINGS: default
        run: make test

  contract-tests:
    name: Contract Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run contract and integration tests
        env:
          DOCKER_BUILDKIT: "1"
          COMPOSE_PROJECT_NAME: ml-contract-tests
        run: |
          docker compose -f docker-compose.test.yml up --build --abort-on-container-exit test-runner

      - name: Tear down services
        if: always()
        env:
          COMPOSE_PROJECT_NAME: ml-contract-tests
        run: |
          docker compose -f docker-compose.test.yml down --volumes --remove-orphans
